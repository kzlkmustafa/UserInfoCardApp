{"ast":null,"code":"import { FormControl, Validators } from \"@angular/forms\";\nimport { UserService } from \"../../../services/user.service\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/user.service\";\nimport * as i3 from \"../../../services/alertify.service\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\n\nfunction AddUserComponent_mat_error_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getErrorMessage());\n  }\n}\n\nexport let AddUserComponent = /*#__PURE__*/(() => {\n  class AddUserComponent {\n    constructor(formBuilder, userService, alertifyService, data) {\n      this.formBuilder = formBuilder;\n      this.userService = userService;\n      this.alertifyService = alertifyService;\n      this.data = data;\n      this.email = new FormControl('', [Validators.required, Validators.email]);\n    }\n\n    getErrorMessage() {\n      if (this.email.hasError('required')) {\n        return 'You must enter a value';\n      }\n\n      return this.email.hasError('email') ? 'Not a valid email' : '';\n    }\n\n    createUserAddForm() {\n      this.userAddForm = this.formBuilder.group({\n        id: [],\n        name: [\"\", Validators.required],\n        title: [\"\"],\n        phone: [\"\", Validators.required],\n        email: [\"\"],\n        website: [\"\"]\n      });\n    }\n\n    ngOnInit() {\n      this.createUserAddForm();\n    }\n\n    add() {\n      if (this.userAddForm.valid) {\n        this.user = Object.assign({}, this.userAddForm.value);\n        console.log(\"burası verinin eşitlendiği yer\", this.userAddForm.value);\n      }\n\n      this.userService.addUser(this.user).subscribe(data => {\n        this.alertifyService.success(data.name + \"Başarıyla eklendi\");\n        console.log(\"burası subscribe olunan yer\", data);\n      });\n    }\n\n    deleteUser() {\n      this.userService.deleteUser().subscribe(data => {\n        this.alertifyService.success(\"Başarıyla silindi\");\n      });\n    }\n\n    updateUser() {\n      this.userService.updateUser(this.user).subscribe(data => {\n        this.alertifyService.success(\"başarıyla düzenlendi\");\n      });\n    }\n\n  }\n\n  AddUserComponent.ɵfac = function AddUserComponent_Factory(t) {\n    return new (t || AddUserComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.AlertifyService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  AddUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddUserComponent,\n    selectors: [[\"app-add-user\"]],\n    features: [i0.ɵɵProvidersFeature([UserService])],\n    decls: 39,\n    vars: 2,\n    consts: [[\"role\", \"alert\", 1, \"alert\", \"alert-dark\", \"m-3\", \"d-flex\", \"justify-content-center\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"standard\", 1, \"d-flex\", \"justify-content-center\"], [\"formControlName\", \"name\", \"matInput\", \"\", \"placeholder\", \"ex. Mustafa\"], [\"formControlName\", \"title\", \"matInput\", \"\", \"placeholder\", \"ex. Memur\"], [\"formControlName\", \"phone\", \"matInput\", \"\", \"placeholder\", \"ex.123456 \"], [\"formControlName\", \"website\", \"matInput\", \"\", \"placeholder\", \"ex. deneme.com.tr\"], [1, \"example-container\"], [\"appearance\", \"fill\", 1, \"d-flex\", \"justify-content-center\"], [\"formControlName\", \"email\", \"matInput\", \"\", \"placeholder\", \"pat@example.com\", \"required\", \"\"], [4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\"]],\n    template: function AddUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\", 0);\n        i0.ɵɵtext(1, \"Yeni Kullan\\u0131c\\u0131 Ekle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AddUserComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.add();\n        });\n        i0.ɵɵelementStart(3, \"div\")(4, \"mat-form-field\", 2)(5, \"mat-label\");\n        i0.ɵɵtext(6, \"\\u0130sim\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 3);\n        i0.ɵɵelementStart(8, \"mat-hint\");\n        i0.ɵɵtext(9, \"Hint\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\")(11, \"mat-form-field\", 2)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"\\u00DCnvan\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 4);\n        i0.ɵɵelementStart(15, \"mat-hint\");\n        i0.ɵɵtext(16, \"Hint\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"div\")(18, \"mat-form-field\", 2)(19, \"mat-label\");\n        i0.ɵɵtext(20, \"telefon numaras\\u0131\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 5);\n        i0.ɵɵelementStart(22, \"mat-hint\");\n        i0.ɵɵtext(23, \"Hint\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"div\")(25, \"mat-form-field\", 2)(26, \"mat-label\");\n        i0.ɵɵtext(27, \"Website\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 6);\n        i0.ɵɵelementStart(29, \"mat-hint\");\n        i0.ɵɵtext(30, \"Hint\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(31, \"div\", 7)(32, \"mat-form-field\", 8)(33, \"mat-label\");\n        i0.ɵɵtext(34, \"email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"input\", 9);\n        i0.ɵɵtemplate(36, AddUserComponent_mat_error_36_Template, 2, 1, \"mat-error\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"button\", 11);\n        i0.ɵɵtext(38, \"EKLE \");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.userAddForm);\n        i0.ɵɵadvance(34);\n        i0.ɵɵproperty(\"ngIf\", ctx.email.invalid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i4.MatFormField, i4.MatLabel, i1.DefaultValueAccessor, i5.MatInput, i1.NgControlStatus, i1.FormControlName, i4.MatHint, i1.RequiredValidator, i6.NgIf, i4.MatError, i7.MatButton],\n    styles: [\".example-container[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%] + .mat-form-field[_ngcontent-%COMP%]{margin-left:8px}section[_ngcontent-%COMP%]{display:table}.example-label[_ngcontent-%COMP%]{display:table-cell;font-size:14px;margin-left:8px;min-width:120px}.example-button-row[_ngcontent-%COMP%]{display:table-cell;width:490px}.example-button-row[_ngcontent-%COMP%]   .mat-button-base[_ngcontent-%COMP%]{margin:8px 8px 8px 0}.example-flex-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;flex-wrap:wrap}.example-button-container[_ngcontent-%COMP%]{display:flex;justify-content:center;width:120px}\"]\n  });\n  return AddUserComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}