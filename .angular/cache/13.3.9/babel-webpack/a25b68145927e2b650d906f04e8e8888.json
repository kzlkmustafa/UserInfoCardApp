{"ast":null,"code":"import { throwError } from \"rxjs\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http, apiUrl) {\n      this.http = http;\n      this.apiUrl = apiUrl;\n    } // users : Users[] =[];\n\n\n    getUsers() {\n      return this.http.get(this.apiUrl).pipe(tap(data => console.log(data.values())), catchError(this.handleError));\n    }\n\n    addUser(user) {\n      return this.http.post(this.apiUrl, user, {\n        headers: {\n          header: 'application/json'\n        }\n      });\n    }\n\n    updateUser(user) {\n      return this.http.put(this.apiUrl + '/1', user);\n    }\n\n    deleteUser() {\n      return this.http.delete(this.apiUrl + '/1');\n    }\n\n    handleError(err) {\n      let errorMessage = '';\n\n      if (err.error instanceof ErrorEvent) {\n        errorMessage = 'Somethings wrong' + err.error.message;\n      } else {\n        errorMessage = 'a system error';\n      }\n\n      return throwError(errorMessage);\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('apiUrl'));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}